{
	"info": {
		"_postman_id": "ca78c7a9-6ca8-44b1-b781-2b462dbb413f",
		"name": "JSONserwer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25150239"
	},
	"item": [
		{
			"name": "Posts",
			"item": [
				{
					"name": "Get all posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:3000/posts",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check title\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.eql(pm.globals.get(\"title\"));\r",
									"});\r",
									"pm.test(\"Check author\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.author).to.eql(pm.globals.get(\"author\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:3000/posts/?id=24",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"posts",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "24"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filtering posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:3000/posts?title=json-server&author=typicode",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "title",
									"value": "json-server"
								},
								{
									"key": "author",
									"value": "typicode"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check title\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.eql(pm.globals.get(\"title\"));\r",
									"});\r",
									"pm.test(\"Check author\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.author).to.eql(pm.environment.get(\"randomName\"));\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"randomName\", pm.variables.replaceIn('{{$randomFullName}}'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n        \"title\": \"{{title}}\",\r\n        \"author\": \"{{randomName}}\",\r\n        \"place\": \"{{$randomCountry}}\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:3000/posts",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update - post nr 3",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"title\": \"json-server33po_aktualizacji\",\r\n        \r\n        \"id\": 3\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:3000/posts/3",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"posts",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update - post nr 1",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"userId\": 1,\r\n        \"id\": 3,\r\n        \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\r\n        \"body\": \"After update - post nr 1 \"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:3000/posts/1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new post to delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check title\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.eql(pm.globals.get(\"title\"));\r",
									"});\r",
									"pm.test(\"Check author\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.author).to.eql(pm.environment.get(\"randomName\"));\r",
									"});\r",
									"pm.globals.set(\"postIdToDelete\", pm.response.json().id);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"randomName\", pm.variables.replaceIn('{{$randomFullName}}'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n        \"title\": \"{{title}}\",\r\n        \"author\": \"{{randomName}}\",\r\n        \"place\": \"{{$randomCountry}}\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:3000/posts",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete new post",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{host}}:3000/posts/{{postIdToDelete}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"posts",
								"{{postIdToDelete}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Get all comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"some comment\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:3000/comments",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:3000/comments/1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filtering comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body is some comment\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].body).to.eql(\"some comment\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:3000/comments?body=some comment",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"comments"
							],
							"query": [
								{
									"key": "author.name",
									"value": "typicode",
									"disabled": true
								},
								{
									"key": "body",
									"value": "some comment"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \r\n        \"body\": \"some comment :-)\",\r\n        \"postId\": 1\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:3000/comments",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update - comment nr 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "   {\r\n        \r\n        \"postId\": 1,\r\n        \"id\": 3\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:3000/comments/3",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"comments",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update - comment nr 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"aktualizacja\",\r\n    \"postId\": 1,\r\n    \"id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:3000/comments/2",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete - comment nr 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{host}}:3000/comments/4",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"comments",
								"4"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}